<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>LIST</title>
  <link rel="stylesheet" href="/style.css">
</head>
<!-- <%= JSON.stringify(posts) %> -->
<body class="grey-bg">
  <!-- include 문법 사용할 때 => <%- %> -->
  <%- include('nav.ejs') %>

  <div class="search-box">
    <input class="search"></input>
    <button class="search-btn">검색</button>
  </div>
  <script>
    // 1. search-btn 클릭하면 서버로 GET 요청
    // 2. search(input)값 query string으로 전송
    document.querySelector('.search-btn').addEventListener('click', function() {
      let searchText = document.querySelector('.search').value
      location.href = '/search?val=' + searchText;
    })
  </script>

  <div class="white-bg">
    <!-- html 사이에 JavaScirpt 문법 사용할 때 => <% %> -->
    <% for(let i = 0; i < posts.length; i++) { %>
      <div class="list-box">
        <h4>
          <a href="/detail/<%- posts[i]._id %>">
            <%= posts[i].title %>
          </a>
          <a href="/edit/<%- posts[i]._id %>">📝</a>
          <span class="delete" data-id="<%= posts[i]._id %>">❌</span>
        </h4>
        <p><%= posts[i].content %></p>
        <img width="80px" src="<%= posts[i].img %>" alt="">
      </div>
    <% } %>
  </div>
  <a href="/list/next/<%= posts[posts.length-1]._id %>">Next</a>
  
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    // axios.get('url').then((r) => {console.log(r)}).catch(() => {})

    // 삭제 버튼 클릭시 ajax로 요청
    for(let i = 0; i < '<%= posts.length %>'; i++) {
      document.querySelectorAll('.delete')[i].addEventListener('click', function(e){
        // query string으로 서버로 데이터 전송
        fetch('/delete?docid=' + e.target.dataset.id, {
         method : 'DELETE'
        })
          // 서버가 보내는 게 문자일 경우 => .text()
          // 서버가 보내는 게 object / array일 경우 => .json()
          .then((res) => res.text())
          .then((res) => {
            e.target.parentElement.parentElement.style.display = 'none';
            if(res.status == 200) {
              return r.json()
            } else {
              // 서버가 에러코드 전송시 실행 할 코드
            }
          // 클라이언트 사이드 랜더링 (새로고침 없이 생성) => React.js
          // html 동적 생성
        })
        // .then((result) => {
        //   // 성공시 실행 할 코드
        // }).catch((error) => {
        //   // 인터넷 문제 등으로 실패시 실행 할 코드
        // })
      })
    }
  </script>
</body>
</html>
